<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="System.Data" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using DistributorWebsite.MVC.WebUI.Helpers.Models;

namespace DistributorWebsite.MVC.WebUI.Helpers
{
    public static partial class Common
    { 
		#region "FUNCTION: GetClientInfo"
		/// <summary>
		/// Get information about the specified client
		/// </summary>
		public static ClientInfo GetClientInfo(string client)
		{			
			switch (client)
			{
				<# 
				try
				{
					//-- NEW RESULTS --
					foreach(var item in GetClients()) 
					{ 
						String client = item.Split('|')[0];
						String bit = item.Split('|')[1];
						String name = item.Split('|')[2];
						String country = item.Split('|')[3];
						String currency = item.Split('|')[4];
			#>case "<#= client #>":
					return new ClientInfo("<#= client #>",<#= bit #>,"<#= name #>","<#= country #>","<#= currency #>");

				<#
					}
				}
				catch (Exception ex)
				{
				}
				#>default:
					return(null);
			}
		}	
		#endregion
	}
}

<#+ 
IEnumerable<string> GetClients()  
{ 
    var connectionString = @"Data Source=sql10-usdev\HCE,49483;Initial Catalog=DistributorWebsite;Integrated Security=True"; 
 
    var commandText = "SELECT * FROM Clients WITH (NOLOCK) ORDER BY ClientBit"; 
             
    using(var connection = new SqlConnection(connectionString))         
    { 
        connection.Open(); 
        using(var command = new SqlCommand(commandText, connection)) 
        using(var reader = command.ExecuteReader()) 
        { 
            while (reader.Read()) 
            {       
                yield return reader["Client"] + "|" + reader["ClientBit"] + "|" + reader["ClientName"] + "|" + reader["CountryCode"] + "|" + reader["Currency"] as string; 
            }     
        } 
    } 
} 
 
#>